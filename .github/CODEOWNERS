* @vladimirlaz @romanovvlad @bader

# Use runtime team as the umbrella for most of the tests
/SYCL/ @intel/llvm-reviewers-runtime


# SYCL sub-directory matchers are grouped by code owner first, followed by
# alphabetical order within the group. Please, keep this ordering.
<<<<<<< HEAD

# Atomics
SYCL/AtomicRef @dm-vodopyanov @AlexeySachkov

# SYCL RT specific tests
SYCL/Assert @intel/llvm-reviewers-runtime
SYCL/Basic @intel/llvm-reviewers-runtime
SYCL/Config @intel/llvm-reviewers-runtime
SYCL/DiscardEvents @intel/llvm-reviewers-runtime
SYCL/FilterSelector @intel/llvm-reviewers-runtime
SYCL/HostInteropTask @intel/llvm-reviewers-runtime
SYCL/InorderQueue @intel/llvm-reviewers-runtime
SYCL/KernelAndProgram @intel/llvm-reviewers-runtime
SYCL/KernelParams @intel/llvm-reviewers-runtime
SYCL/Scheduler @intel/llvm-reviewers-runtime
SYCL/Tracing  @intel/llvm-reviewers-runtime

# Device library
SYCL/DeviceLib @vzakhari
SYCL/DeviceLib/ITTAnnotations @vzakhari @MrSidims
=======
>>>>>>> temp_intel

# Group algorithms
/SYCL/GroupAlgorithm/ @Pennycook @intel/llvm-reviewers-runtime
/SYCL/GroupLocalMemory/ @Pennycook @intel/llvm-reviewers-runtime
/SYCL/SubGroup/ @Pennycook @intel/llvm-reviewers-runtime
/SYCL/SubGroupMask/ @Pennycook @intel/llvm-reviewers-runtime

# Plugin interface for Level Zero
/SYCL/Plugin/*level[-_]zero* @intel/dpcpp-l0-pi-reviewers

# Explicit SIMD
<<<<<<< HEAD
config_sycl/esimd* @kychendev @kbobrovs @v-vklochkov
SYCL/ESIMD @intel/dpcpp-esimd-reviewers

# Functor
SYCL/Functor @AlexeySachkov

# Group algorithms
SYCL/GroupAlgorithm @Pennycook @intel/llvm-reviewers-runtime
SYCL/SubGroup @Pennycook @intel/llvm-reviewers-runtime
SYCL/SubGroupMask @Pennycook @intel/llvm-reviewers-runtime
SYCL/GroupLocalMemory @Pennycook @intel/llvm-reviewers-runtime

# Plugin interface for Level Zero
SYCL/Plugin/*level-zero* @intel/dpcpp-l0-pi-reviewers

# Printf
SYCL/Printf @intel/dpcpp-tools-reviewers

# Reduction algorithms
SYCL/Reduction @v-klochkov

# Image sampler
SYCL/Sampler @cperkinsintel

# Separate compilation
SYCL/SeparateCompile @intel/dpcpp-tools-reviewers

# Specialization constant
SYCL/SpecConstants @intel/dpcpp-tools-reviewers

# Unified Shared Memory (USM)
SYCL/USM @jbrodman @sergey-semenov

# Stream
SYCL/Basic/stream @againull

# Test scripts
*.pl @yuxianch @myler @yamanwan
*.list @yuxianch @myler @yamanwan

# tc files
*.xml @yuxianch @myler @yamanwan

# Deprecated features
SYCL/DeprecatedFeatures @intel/llvm-reviewers-runtime

# ESIMD embargo
SYCL_ESIMD_EMBARGO @kychendev @kbobrovs @v-vklochkov
config_sycl_esimd_embargo @kychendev @kbobrovs @v-vklochkov
SYCL_ESIMD_EMBARGO/ESIMD/EMBARGO/lsc @fveselov

# named barriers
SYCL_ESIMD_EMBARGO/ESIMD/EMBARGO/named_barriers @fveselov

# XPTI and XPTI Framework
SYCL/XPTI @intel/llvm-reviewers-runtime
# Group algorithms
/SYCL/GroupAlgorithm/ @Pennycook @intel/llvm-reviewers-runtime
/SYCL/GroupLocalMemory/ @Pennycook @intel/llvm-reviewers-runtime
/SYCL/SubGroup/ @Pennycook @intel/llvm-reviewers-runtime
/SYCL/SubGroupMask/ @Pennycook @intel/llvm-reviewers-runtime

# Plugin interface for Level Zero
/SYCL/Plugin/*level[-_]zero* @intel/dpcpp-l0-pi-reviewers

# Explicit SIMD
/SYCL/ESIMD/ @intel/dpcpp-esimd-reviewers

# BFloat16 conversion
/SYCL/BFloat16/ @AlexeySotkin @intel/dpcpp-tools-reviewers

# Compiler tests
/SYCL/AOT/ @intel/dpcpp-tools-reviewers
/SYCL/DeviceCodeSplit/ @intel/dpcpp-tools-reviewers
/SYCL/SeparateCompile/ @intel/dpcpp-tools-reviewers

# Printf
/SYCL/Printf/ @intel/dpcpp-tools-reviewers

# Specialization constant
=======
/SYCL/ESIMD/ @intel/dpcpp-esimd-reviewers

# BFloat16 conversion
/SYCL/BFloat16/ @AlexeySotkin @intel/dpcpp-tools-reviewers

# Compiler tests
/SYCL/AOT/ @intel/dpcpp-tools-reviewers
/SYCL/DeviceCodeSplit/ @intel/dpcpp-tools-reviewers
/SYCL/SeparateCompile/ @intel/dpcpp-tools-reviewers

# Printf
/SYCL/Printf/ @intel/dpcpp-tools-reviewers

# Specialization constant
>>>>>>> temp_intel
/SYCL/SpecConstants/ @intel/dpcpp-tools-reviewers
